@page "/"
@inject HttpClient httpClient




<table class="table table-striped table-dark">
    <thead >
        <tr>
            <td>Sport</td>
            <td>Host</td>
            <td>Guest</td>
            <td>Score</td>
            <td>Status</td>
            <td>1</td>
            <td>X</td>
            <td>2</td>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Match)
        {
            <tr>
                <td>@item.Sport</td>
                <td>@item.HomeTeam</td>
                <td>@item.AwayTeam</td>
                <td>@item.Score</td>
                <td>@item.Status</td>
                <td>
                    <button type="button" class="btn btn-primary btn-sm">@item.StakeValueOne</button>
                </td>
                <td>
                    <button type="button" class="btn btn-primary btn-sm">@item.StakeValueX</button>
                </td>
                <td>
                    <button type="button" class="btn btn-primary btn-sm">@item.StakeValueTwo</button>
                </td>

            </tr>
        }
    </tbody>
</table>




@functions
{
    List<MatchDTO> Match { get; set; }
    List<MatchDTO> SelectedMatches { get; set; }


    protected override async Task OnInitAsync()
    {
        Match = new List<MatchDTO>();
        await RefreshMatches(TimeSpan.FromSeconds(5), true);
    }

    private async Task RefreshMatches(TimeSpan interval, bool initiate)
    {
        while (initiate)
        {
            await Task.Delay(interval);
            await GetMatches();
        }

    }


    private async Task GetMatches()
    {
        List<MatchDTO> matchDTOs = new List<MatchDTO>();

        matchDTOs = await httpClient.GetJsonAsync<List<MatchDTO>>("https://localhost:44315/api/Match/All");

        Match = matchDTOs;
        StateHasChanged();

    }









}